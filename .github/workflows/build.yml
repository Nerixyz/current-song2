name: Build

on:
  push:
    branches: [master]
    tags: ['*']

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: npm
          cache-dependency-path: js
      - run: npm ci
        working-directory: js
      - name: JS Build
        run: npm run build
        working-directory: js
        if: ${{ !(contains(github.ref, 'refs/tags/') && !(contains(github.ref, 'beta') || contains(github.ref, 'alpha'))) }}
      - name: JS Release Build
        run: npm run release
        working-directory: js
        # only on if it's a release build
        if: ${{ (contains(github.ref, 'refs/tags/') && !(contains(github.ref, 'beta') || contains(github.ref, 'alpha'))) }}
        env:
          WEB_EXT_API_KEY: ${{ secrets.WEB_EXT_API_KEY }}
          WEB_EXT_API_SECRET: ${{ secrets.WEB_EXT_API_SECRET }}
      - run: 7z a artifacts\client.zip .\js\packages\client\dist
      - uses: actions-rs/toolchain@v1
        id: rust_chain
        with:
          profile: minimal
          toolchain: stable
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ steps.rust_chain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}-build
      - name: Build
        run: cargo build --release
      - uses: actions/upload-artifact@v2
        with:
          name: executable
          path: target/release/current-song-2.exe
      - uses: actions/upload-artifact@v2
        with:
          name: extension
          path: js/packages/extension/artifacts/*
      - uses: actions/upload-artifact@v2
        with:
          name: client
          path: artifacts/client.zip
  create-release:
    needs: [build]
    runs-on: ubuntu-latest
    if: (contains(github.ref, 'refs/tags/'))
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          preselease: ${{ (contains(github.ref, 'refs/tags/') && (contains(github.ref, 'beta') || contains(github.ref, 'alpha'))) }} 
